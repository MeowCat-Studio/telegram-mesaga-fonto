name: pre-release

on:
  push:
    branches: [ master ]
    paths-ignore: [ '*.md' ]

env:
  SHORT_NAME: tg
  CRATE_NAME: msgist-tg

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      time: ${{ steps.time.outputs.time }}
    steps:
      - name: Get Current Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYYMMDDHHmmss'

  compile:
    name: Compile
    runs-on: ${{ matrix.os }}
    needs: [prepare]
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release_name: x86_64-linux
            postfix: ""
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: true

          - os: ubuntu-latest
            target: i686-unknown-linux-musl
            release_name: i686-linux
            postfix: ""
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release_name: aarch64-linux
            postfix: ""
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: true
          # Windows GNU
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            release_name: x86_64-windows.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features no-color,monolith,beta"
            cross: true

          - os: ubuntu-latest
            target: i686-pc-windows-gnu
            release_name: i686-windows.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features no-color,monolith,beta"
            cross: true

          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            release_name: x86_64-windows-colored.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: true

          - os: ubuntu-latest
            target: i686-pc-windows-gnu
            release_name: i686-windows-colored.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: true
          # Mac OSX
          - os: macos-latest
            target: x86_64-apple-darwin
            release_name: x86_64-mac
            postfix: ""
            extra_args: "--no-default-features --features default-monolith,beta"
            cross: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Resume cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.target }}-release-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.target }}-release

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2022-09-14
          target: ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} ${{ matrix.extra_args }}
        env:
          MESAGISTO_VERSION: "beta-${{needs.prepare.outputs.time}}"

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/${{ env.CRATE_NAME }}${{ matrix.postfix }} ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: compile
          path: ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

  release:
    name: Release
    needs: [compile, prepare]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: compile
          path: ./packages

      - name: Compress
        run: bash ./.github/compress.sh

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "beta-${{needs.prepare.outputs.time}}"
          prerelease: true
          title: "Unstable PreRelease/不稳定预发行版"
          files: |
            packages/*
            LICENSE

      - name: Delete older releases and tags
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 1
          delete_tag_pattern: beta
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
